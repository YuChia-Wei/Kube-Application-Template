apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Values.service | lower | quote }}
  labels:
    app.kubernetes.io/name: {{ .Values.service | lower | quote }}
    app.kubernetes.io/part-of: {{ .Values.system | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service | lower | quote }}
      version: {{ .Values.version | quote }}
  workloadRef: 
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.service | lower | quote }}
  revisionHistoryLimit: 3
  strategy:
    canary:
      # Reference to a Service which the controller will update to point to the canary ReplicaSet
      canaryService: {{ (print .Values.service "-canary") | lower | quote }}
      # Reference to a Service which the controller will update to point to the stable ReplicaSet
      stableService: {{ (print .Values.service "-stable") | lower | quote }}
      trafficRouting:
        nginx:
          # Reference to an Ingress which has a rule pointing to the stable service (e.g. rollouts-demo-stable)
          # This ingress will be cloned with a new name, in order to achieve NGINX traffic splitting.
          stableIngress: {{ (print .Values.service "-ingress-stable") | lower | quote }}